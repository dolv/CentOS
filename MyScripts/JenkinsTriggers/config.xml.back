<project>
  <actions />
  <description />
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs />
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>REPOSITORY</name>
          <description />
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>ci</string>
              <string>stable</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <org.biouno.unochoice.CascadeChoiceParameter plugin="uno-choice@1.3">
          <name>POS_BACKEND_VERSION</name>
          <description />
          <randomName>choice-parameter-1808797935290951</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.ScriptlerScript">
            <scriptlerScriptId>fgl_artifact_versions_browser.groovy</scriptlerScriptId>
            <parameters class="linked-hash-map">
              <entry>
                <string>STORAGE</string>
                <string>EPAM-FPOS</string>
              </entry>
              <entry>
                <string>POS_BACKEND_DEPLOY</string>
                <string>on</string>
              </entry>
              <entry>
                <string>REPOSITORY</string>
                <string>$REPOSITORY</string>
              </entry>
            </parameters>
          </script>
          <projectName>01.1_POS_QA_AUTO_deployBackend</projectName>
          <parameters class="linked-hash-map" />
          <referencedParameters>REPOSITORY,POS_BACKEND_DEPLOY</referencedParameters>
          <choiceType>PT_SINGLE_SELECT</choiceType>
          <filterable>false</filterable>
        </org.biouno.unochoice.CascadeChoiceParameter>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.8.1">
      <teamDomain />
      <token />
      <room />
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>true</notifyUnstable>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage />
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30" />
  </properties>
  <scm class="hudson.scm.NullSCM" />
  <assignedNode>FPOS-Build</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers />
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>${FPOS_DEVOPS_REPO}/env/ansible/projects/ctco-fpos/pos-stack</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

set -x

export ANSIBLE_FORCE_COLOR=true
export PYTHONUNBUFFERED=true
export ANSIBLE_HOST_KEY_CHECKING=False
export ANSIBLE_NOCOWS=true

ansible-playbook -i ../inventory/ua/qa_auto -l pos,mq \
--extra-vars '{
  "tomcat_apps": [
	  {
        "name": "backoffice-webservices",
        "version": "'${POS_BACKEND_VERSION}'",
        "repository": "'${PUBLIC_REPO}'",
        "group": "marks.pos",
        "context": "/"
      }
  ]}' setup.yml --tags always,manage_queues,tomcat_deploy</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers />
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.7.3" />
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <org.jenkinsci.plugins.environmentdashboard.DashboardBuilder plugin="environment-dashboard@1.1.4">
      <nameOfEnv>FPOS_QA_AUTO</nameOfEnv>
      <componentName>InStore POS BackOffice</componentName>
      <buildNumber>${POS_BACKEND_VERSION}</buildNumber>
      <buildJob />
      <packageName />
      <data />
      <addColumns>false</addColumns>
    </org.jenkinsci.plugins.environmentdashboard.DashboardBuilder>
  </buildWrappers>
</project>